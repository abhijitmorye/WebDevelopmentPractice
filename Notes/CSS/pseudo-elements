Psuedo-classes:

1. :not classes : it is like not in java

		syntax: selectors:not(:last-child/first-child/nth-child(N)){
		
		style
		
		}
		
		so apply the style to the all elements except last-child
		
		
		eg:
		
		<ul>
		<li>A</li>
		<li>B</li>
		<li>C</li>
		</ul>
		
		
		li:not(:last-child) {
		
		background-color: red;		
		
		}
		
		so red background color will be applied to all list item except last child.
		
		
	


2.  :focus classes : we can style the button or input firld in form using this property whenever they are focused or clicked on.

			Syntax :  
			
						form:focus {
							border: 3px solid green;
						}
						
						
						
3.  :invalid class : we can specify the style for input field till user fill the correct info in input field like, we will make border of input box in form red till user types in correct email id.


			Syntax:
			
					form:focus:invalid {  
					
						border: 3px solid red;
					
					}


---------------------------------------------------------------------------------*******************-------------------------------------------------------------



Psuedo elements :


1) ::after elements :

	puts the exact element after the element to which we have applied this property.
	
	syntax--> tagname::after
	
	eg:
	
	------------------------------------------
	
        <!DOCTYPE html>
         <html>
          <head>
           <style>
             p::after { 
                       content: " - Remember this";
                      }
           </style>
          </head>
          <body>
        
           <p>My name is Donald</p>
           <p>I live in Ducksburg</p>
        
           <p><b>Note:</b> For this selector to work in IE8, a DOCTYPE must be declared, and you must use the old, single-colon CSS2 syntax (:after instead of ::after).</p>
        
          </body>
         </html>
		 
	
	------------------------------------------
	
	
2)  ::-webkit-input-placeholder :

we can style the placeholder such as its color,font-size etc using this property


		syntax:
		
				form::-webkit-input-placeholder {
												color: $color-form-text;
											}
											
									
	
	------------------------------------------
	
											
								
3) :placeholder-shown : 

so using this property, we can actually style the properties of an element if user has not type anything and only placeholder is shown


		syntax:
		
				form:placeholder-shown {
												color: red; // we can shown the color of placeholder
											}
											
											
						

	------------------------------------------
	

4) We can style the element based on radio or checbox is checked or not using psuedo class ":checked"	


Ans :

		Syntax:
		
					<input type="radio" name="name" id="radio1" class="radio-input">
					<label for="radio1" class="radio__label">Male</label>
					<input type="radio" name="name" id="radio2" class="radio-input">
					<label for="radio2" class="radio__label">Female</label>
					
					
					.radio-input:checked + .radio-label {
					
						color: red;
					
					}
					
					
		Here , we have made color of radio label red whenever user clicks on radio button otherwise it will be default.


	
